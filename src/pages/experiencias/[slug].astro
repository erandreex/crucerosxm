---
import { getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import "../../styles/global.css";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
import { getImage } from "astro:assets";

export async function getStaticPaths() {
	const entradas = await getCollection("experiencias");
	return entradas.map((entrada) => ({
		params: { slug: entrada.slug },
		props: { entrada },
	}));
}

const { entrada } = Astro.props;
const { Content } = await entrada.render();

// Transformar la imagen en un objeto compatible con @astrojs/image
// Transformar la imagen en un objeto compatible con @astrojs/image
const optimizedImg = await getImage({
	src: `/${entrada.data.img}`,
	width: 800,
	height: 1000,
	format: "webp",
});
---

<Layout title=`${entrada.data.title}` description=`${entrada.data.description}`>
	<Header />

	<div class="max-w-4xl mx-auto py-8 px-6 min-h-screen">
		<div class="flex items-center space-x-2 py-10">
			<a href="/" class="hover-text-primary">Inicio</a>
			<span>/</span>
			<a href="/experiencias" class="hover-text-primary">Experiencias</a>
			<span>/</span>
			<a href={`/experiencias/${entrada.slug}`} class="hover-text-primary">{entrada.data.title}</a>
		</div>

		<h1 class="text-3xl font-bold mb-4">{entrada.data.title}</h1>
		<p class="text-sm mb-2">
			Publicado el <time datetime="2025-02-16">{entrada.data.datePub}</time>
			<br />
			Autor <a href="/eliany-caballero" class="hover-text-primary enlaces">Eliany Caballero</a>
		</p>
		<img
			src={`${optimizedImg.src}`}
			transition:name={`${entrada.data.title}-image`}
			alt={entrada.data.title}
			class="sm:aspect-3/2 md:w-full object-cover"
		/>

		<br />
		<Content />

		<br />

		<!-- Cuadrícula dinámica basada en la propiedad images -->
		{
			entrada.data.images && entrada.data.images.length > 0 && (
				<div class="my-8">
					<h3 class="text-2xl font-bold mb-6 text-center">Galería del Viaje</h3>
					<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
						{entrada.data.images.map((image, index) => (
							<div class="group cursor-pointer transform transition-all duration-300 hover:scale-105 hover:shadow-xl">
								<div class="relative overflow-hidden rounded-lg bg-white shadow-md">
									<img
										src={image.src}
										alt={image.alt}
										class="w-full h-64 object-cover transition-transform duration-300 group-hover:scale-110"
									/>
									<div class="absolute inset-0 bg-black opacity-0 group-hover:opacity-20 transition-opacity duration-300" />
								</div>
								{image.caption && <h4 class="text-center mt-3 font-semibold text-gray-700 text-sm">{image.caption}</h4>}
							</div>
						))}
					</div>
				</div>
			)
		}
	</div>
	<Footer />
</Layout>

<style>
	/* Estilos personalizados para la cuadrícula de imágenes */
	.grid img {
		transition: transform 0.3s ease-in-out;
	}

	.group:hover img {
		transform: scale(1.05);
	}

	/* Animación suave para el hover */
	.group {
		transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
	}

	/* Efecto de sombra en hover */
	.group:hover {
		transform: translateY(-4px);
	}

	/* Responsive adjustments */
	@media (max-width: 768px) {
		.grid {
			grid-template-columns: 1fr;
			gap: 1rem;
		}
	}

	@media (min-width: 769px) and (max-width: 1024px) {
		.grid {
			grid-template-columns: repeat(2, 1fr);
		}
	}

	/* Overlay para modo oscuro en hover */
	.group .absolute {
		transition: opacity 0.3s ease-in-out;
	}
</style>
